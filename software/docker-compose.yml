version: "2.3"


# Volumes
volumes:
  mysql_database_volume:
    driver: local
  mongo_database_volume:
    driver: local


services:

  database-server:
    image: mariadb:10.7.4
    container_name: ${DB_HOST:-irrigation_database}
    networks:
      default:
        aliases:
          - ${DB_HOST:-irrigation_database}
    restart: always
    volumes:
      - mysql_database_volume:/var/lib/mysql
    environment:
      - TZ=Europe/Madrid
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASS:-admin}
      - MYSQL_DATABASE=${DATABASE:-irrigation}
      - MYSQL_USER=${DB_USER:-user}
      - MYSQL_PASSWORD=${DB_PASS:-0123}
    ports:
      - ${DB_PORT_BINDED:-3306}:${DB_PORT:-3306}
    logging:
      driver: none

  broker:
    image: eclipse-mosquitto
    container_name: ${MQTT_HOST:-irrigation_broker}
    restart: always
    volumes:
      - ./config/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./config/mosquitto/mosquitto_passwd:/mosquitto/config/pwfile
    ports:
      - ${BROKER_PORT_BINDED:-1883}:${BROKER_PORT:-1883}
      - ${BROKER_WEBPORT_BINDED:-8884}:${BROKER_WEBPORT:-8884}
    logging:
      driver: none

  mongodb:
    image: mongo:4.4
    container_name: ${MONGODB_HOST:-irrigation_mongodb}
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USER:-user}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASS:-0123}
      - MONGO_INITDB_DATABASE=${MONGODB_DATABASE:-irrigation}
    ports:
      - "${MONGODB_PORT_BINDED:-27017}:${MONGODB_PORT:-27017}"
    restart: always
    volumes:
      - ./databases/mongodb/docker-entrypoint-initdb.d/nzef.js:/docker-entrypoint-initdb.d/nzef.js:ro
      - mongo_database_volume:/data/db
    networks:
      default:
        aliases:
          - ${MONGODB_HOST:-irrigation_mongodb}
    logging:
      driver: "json-file"
      options:
        max-size: "500k"
        max-file: "3"

  # api auth
  server-auth:
    container_name: irrigation_auth
    networks:
      default:
        aliases:
          - irrigation_auth
    build:
      context: .
      dockerfile: ./config/docker/oauth_users.Dockerfile
      args:
        - LOGS_FOLDER=logs
    env_file: .env
    restart: always
    ports:
      - ${AUTH_API_PORT}:5000
    mem_limit: 1500m
    memswap_limit: 100m
    cpus: 1.0
    cpu_shares: 614
    # logging:
    #   driver: "none"

  # nginx inverse proxy
  # nginx:
  #   image: nginx
  #   networks:
  #     default:
  #       aliases:
  #         - nginx_inverse_proxy
  #   restart: always
  #   env_file: .env
  #   volumes:
  #     - ./config/nginx/api.template:/etc/nginx/conf.d/api.template
  #     - ./users_api.sock:/etc/nginx/api.sock
  #     - ./logs/nginx/:/var/log/nginx
  #   environment:
  #     - TZ=Europe/Madrid
  #     - WEBS_IP=${AUTH_API_HOST}
  #   ports:
  #     - ${PROXY_API_PORT}:80
  #   command: /bin/bash -c "envsubst '$${WEBS_IP}' < /etc/nginx/conf.d/api.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"
  #   logging:
  #     driver: "none"

  api:
    container_name: ${API_HOST}
    networks:
      default:
        aliases:
          - ${API_HOST}
    build:
      context: .
      dockerfile: ./config/docker/api.Dockerfile
      args:
        - LOGS_FOLDER=logs
    restart: always
    env_file: .env
    volumes:
      - ./server/irrigation:/irrigation
      - ./logs:/irrigation/logs
      - ./.env:/irrigation/.env
      - ./server/irrigation/requirements.txt:/irrigation/requirements.txt
    ports:
      - ${API_PORT}:5000

  recollector:
    container_name: irrigation_recollector
    networks:
      default:
        aliases:
          - irrigation_recollector
    build:
      context: .
      dockerfile: ./config/docker/service.Dockerfile
      args:
        - LOGS_FOLDER=logs
        - SERVICE_FILE=run_collector.py
    restart: always
    env_file: .env
    volumes:
      - ./server/irrigation:/irrigation
      - ./logs:/irrigation/logs
      - ./.env:/irrigation/.env
      - ./server/irrigation/requirements.txt:/irrigation/requirements.txt
